(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{375:function(s,t,a){"use strict";a.r(t);var n=a(25),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"模块化的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块化的作用"}},[s._v("#")]),s._v(" 模块化的作用")]),s._v(" "),a("ul",[a("li",[s._v("抽离公共代码")]),s._v(" "),a("li",[s._v("隔离作用域")]),s._v(" "),a("li",[s._v("避免变量冲突")])]),s._v(" "),a("h2",{attrs:{id:"commonjs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commonjs"}},[s._v("#")]),s._v(" CommonJS")]),s._v(" "),a("p",[s._v("在 Node 模块中，采用的是 CommonJS 规范。该规范为同步加载，不适合浏览器。\nNodeJS 使用 "),a("code",[s._v("require")]),s._v(" 方式引入模块，而使用 "),a("code",[s._v("module.exports")]),s._v(" 导出接口。这个"),a("code",[s._v("module.exports")]),s._v(" 是 node 提供的一个私有全局变量属性，而 "),a("code",[s._v("require")]),s._v(" 也是 node 提供的一个私有全局方法。")]),s._v(" "),a("h2",{attrs:{id:"amd-与-cmd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#amd-与-cmd"}},[s._v("#")]),s._v(" AMD 与 CMD")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("二者的共同点：都是对模块定义的不同规范且都是异步加载模块，并且解决了文件之间的依赖重命名冲突等问题")])]),s._v(" "),a("li",[a("p",[s._v("不同点：前者 AMD 是将所有文件同时加载，一次性引入，推崇依赖前置，也就是在定义模块时要先声明其依赖的模块，加载完模块后会立马执行该模块（运行时加载）。后者 CMD 强调的是一个文件一个模块，可按需引入，推崇依赖就近，加载完某个模块后不会立即执行，而是等遇到了 "),a("code",[s._v("require")]),s._v(" 语句的时候再执行。")]),s._v(" "),a("p",[s._v("两者的不同加载机制导致了 AMD 模块会提前执行，用户体验好，而 CMD 性能好，只有在需要时候才执行。")])])]),s._v(" "),a("h2",{attrs:{id:"es6-中模块导入导出的基本语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-中模块导入导出的基本语法"}},[s._v("#")]),s._v(" ES6 中模块导入导出的基本语法")]),s._v(" "),a("p",[s._v("可以将 "),a("code",[s._v("export")]),s._v(" 放在任何变量、函数或类的前面，从而将它们从模块导出，而 "),a("code",[s._v("import")]),s._v(" 用于引入数据")]),s._v(" "),a("h3",{attrs:{id:"默认导出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#默认导出"}},[s._v("#")]),s._v(" 默认导出")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" func "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./example.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h3",{attrs:{id:"一般导出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一般导出"}},[s._v("#")]),s._v(" 一般导出")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./example.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("ul",[a("li",[s._v("在 node 版本环境中，暂不支持 "),a("code",[s._v("export")]),s._v(" 和 "),a("code",[s._v("import")]),s._v(" 语法，所以得先将 ES6 转换成 ES5 版本的代码，方法：")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\nnpm install --global babel-cli\nnpm install --save babel-preset-es2015\n\n")])])]),a("p",[s._v("然后在当前目录下新建配置文件.babelrc，")]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"presets"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"es2015"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("=================================")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("标识符 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("，标识符 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"本地模块路径"')]),s._v("\n\n")])])]),a("ul",[a("li",[a("p",[s._v("在 Node.js 中，区分加前缀和不加前缀，不加路径前缀的表示的是包，而加入路径前缀的表示本地文件")])]),s._v(" "),a("li",[a("p",[s._v("无法在 "),a("code",[s._v("import")]),s._v(" 语句前使用标识符或改变绑定的值")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("export")]),s._v(" 和 "),a("code",[s._v("import")]),s._v(" 必须在其他语句和函数之外使用")])]),s._v(" "),a("li",[a("p",[s._v("导入定义时的变量无法更改：在 ES6 中的 "),a("code",[s._v("import")]),s._v(" 语句为变量、函数、类创建的目的是只读绑定所要导入的对象，而不是像正常变量一样简单的引用原始绑定，标识符只有在被导出的模块中可以修改，当导入绑定的模块后，它是无法更改绑定的值的")])])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" setName "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./example.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//2")]),s._v("\nname "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//报错")]),s._v("\n")])])]),a("h2",{attrs:{id:"commonjs-与-es6-modules-规范的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commonjs-与-es6-modules-规范的区别"}},[s._v("#")]),s._v(" CommonJS 与 ES6 Modules 规范的区别")]),s._v(" "),a("blockquote",[a("p",[s._v("CommonJS 模块是运行时加载，ES6 Modules 是编译时输出接口\nCommonJS 输出是值的浅拷贝；ES6 Modules 输出的是值的引用，被输出模块的内部的改变会影响引用的改变\nCommonJs 导入的模块路径可以是一个表达式，因为它使用的是 require()方法；而 ES6 Modules 只能是字符串\nCommonJS 的 this 指向当前模块，ES6 Modules 的 this 指向 undefined\n且 ES6 Modules 中没有这些顶层变量：arguments、require、module、exports、**filename、**dirname")])]),s._v(" "),a("blockquote",[a("p",[s._v("关于第一、二个差异，是因为 CommonJS 加载的是一个对象（即 module.exports 属性），该对象只有在脚本运行完才会生成。\n而 ES6 模块不是对象，它的对外接口只是一种静态定义，在代码静态解析阶段就会生成。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);