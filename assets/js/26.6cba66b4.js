(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{389:function(t,e,a){"use strict";a.r(e);var i=a(25),s=Object(i.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"布局视口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布局视口"}},[t._v("#")]),t._v(" 布局视口")]),t._v(" "),a("ul",[a("li",[t._v("在 PC 上，布局视口相当于浏览器的窗口大小（不包括 border，margin，和滚动条）")]),t._v(" "),a("li",[t._v("在移动端上，布局视口的宽度大部分被赋予 980px，可以通过 document.documentElement.clientWidth 来获取布局视口的大小")])]),t._v(" "),a("h2",{attrs:{id:"视觉视口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#视觉视口"}},[t._v("#")]),t._v(" 视觉视口")]),t._v(" "),a("p",[t._v("相当于用户透过屏幕看到的真正的大小。视觉视口默认等于当前浏览器窗口的大小（包括滚动条宽度）。用户放大缩小时，不会改变布局视口的大小，但是会改变视觉视口的大小。可以通过 window.innerWidth 来获取视觉视口的大小")]),t._v(" "),a("h2",{attrs:{id:"理想视口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#理想视口"}},[t._v("#")]),t._v(" 理想视口")]),t._v(" "),a("p",[t._v("网页展示在移动端的理想大小。可以通过 screen.width 来获取理想视口的大小")]),t._v(" "),a("h3",{attrs:{id:"meta"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#meta"}},[t._v("#")]),t._v(" meta")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('  <meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1">\n')])])]),a("h2",{attrs:{id:"获取浏览器的大小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取浏览器的大小"}},[t._v("#")]),t._v(" 获取浏览器的大小")]),t._v(" "),a("ul",[a("li",[t._v("document.documentElement.clientWidth：布局视口高度，包括内边距，不包括外边距，边框，垂直滚动条")]),t._v(" "),a("li",[t._v("document.documentElement.offsetWidth：页面总高度")]),t._v(" "),a("li",[t._v("document.documentElement.scrollWidth：在不使用滚动条的情况下为了适应视口中所用内容所需的最小高度")]),t._v(" "),a("li",[t._v("window.screen.availHeight：屏幕可用高度")]),t._v(" "),a("li",[t._v("window.screen.height：屏幕高度")]),t._v(" "),a("li",[t._v("window.innerHeight：页面可用高度")]),t._v(" "),a("li",[t._v("window.outerHeight：浏览器高度")])]),t._v(" "),a("h2",{attrs:{id:"物理像素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#物理像素"}},[t._v("#")]),t._v(" 物理像素")]),t._v(" "),a("p",[t._v("手机屏幕上显示的最小单元，该最小单元具有颜色及亮度的属性可供设置，iphone6、7、8 为：750 _ 1334，iphone6+、7+、8+ 为 1242 _ 2208")]),t._v(" "),a("h2",{attrs:{id:"设备独立像素-css-中的-px"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设备独立像素-css-中的-px"}},[t._v("#")]),t._v(" 设备独立像素（CSS 中的 px）")]),t._v(" "),a("p",[t._v("此为逻辑像素，计算机设备中的一个点，css 中设置的像素指的就是该像素。老早在没有 retina 屏之前，设备独立像素与物理像素是相等的。")]),t._v(" "),a("h2",{attrs:{id:"设备像素比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设备像素比"}},[t._v("#")]),t._v(" 设备像素比")]),t._v(" "),a("p",[t._v("设备像素比（DPR）= 物理像素 / 设备独立像素。如 iphone 6、7、8 的 dpr 为 2，那么一个设备独立像素便为 4 个物理像素，因此在 css 上设置的 1px 在其屏幕上占据的是 2 个物理像素，0.5px 对应的才是其所能展示的最小单位。这就是 1px 在 retina 屏上变粗的原因，目前有很多办法来解决这一问题。")]),t._v(" "),a("blockquote",[a("p",[t._v("viewport 的 initial-scale 具有缩放页面的效果。对于 dpr=2 的屏幕，1px 压缩一半便可与 1px 的设备像素比匹配，这就可以通过将缩放比 initial-scale 设置为 0.5=1/2 而实现。以此类推 dpr=3 的屏幕可以将 initial-scale 设置为 0.33=1/3 来实现")])])])}),[],!1,null,null,null);e.default=s.exports}}]);